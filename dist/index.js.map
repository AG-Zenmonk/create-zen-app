{"version":3,"sources":["node_modules/process/browser.js","node_modules/path-browserify/index.js","bin/create-app.js","index.js"],"names":["cachedSetTimeout","cachedClearTimeout","process","module","exports","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","e","call","runClearTimeout","marker","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","Item","array","noop","nextTick","args","Array","arguments","i","push","prototype","apply","title","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","_regeneratorRuntime","t","r","Object","n","hasOwnProperty","o","defineProperty","value","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","_catch","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","err","undefined","_require","require","execSync","path","fs","console","log","exit","projectName","currentPath","projectPath","join","git_repo","mkdirSync","code","main","_main","_callee","_callee$","_context","rmdirSync","recursive","createApp"],"mappings":"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","file":"index.js","sourceRoot":"..","sourcesContent":["// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\n// backported and transplited with Babel, with backwards-compat fixes\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  if (path.length === 0) return '.';\n  var code = path.charCodeAt(0);\n  var hasRoot = code === 47 /*/*/;\n  var end = -1;\n  var matchedSlash = true;\n  for (var i = path.length - 1; i >= 1; --i) {\n    code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1) return hasRoot ? '/' : '.';\n  if (hasRoot && end === 1) {\n    // return '//';\n    // Backwards-compat fix:\n    return '/';\n  }\n  return path.slice(0, end);\n};\n\nfunction basename(path) {\n  if (typeof path !== 'string') path = path + '';\n\n  var start = 0;\n  var end = -1;\n  var matchedSlash = true;\n  var i;\n\n  for (i = path.length - 1; i >= 0; --i) {\n    if (path.charCodeAt(i) === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // path component\n      matchedSlash = false;\n      end = i + 1;\n    }\n  }\n\n  if (end === -1) return '';\n  return path.slice(start, end);\n}\n\n// Uses a mixed approach for backwards-compatibility, as ext behavior changed\n// in new Node.js versions, so only basename() above is backported here\nexports.basename = function (path, ext) {\n  var f = basename(path);\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\nexports.extname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  var startDot = -1;\n  var startPart = 0;\n  var end = -1;\n  var matchedSlash = true;\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find\n  var preDotState = 0;\n  for (var i = path.length - 1; i >= 0; --i) {\n    var code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n    if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension\n      matchedSlash = false;\n      end = i + 1;\n    }\n    if (code === 46 /*.*/) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n    } else if (startDot !== -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension\n      preDotState = -1;\n    }\n  }\n\n  if (startDot === -1 || end === -1 ||\n      // We saw a non-dot character immediately before the dot\n      preDotState === 0 ||\n      // The (right-most) trimmed path component is exactly '..'\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n  return path.slice(startDot, end);\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","const { execSync } = require('child_process');\r\nconst path = require('path');\r\nconst fs = require('fs');\r\n\r\nif (process.argv.length < 3) {\r\n    console.log('You have to provide a name to your app.');\r\n    console.log('For example :');\r\n    console.log('    npx create-my-boilerplate my-app');\r\n    process.exit(1);\r\n}\r\nconst projectName = process.argv[2];\r\nconst currentPath = process.cwd();\r\nconst projectPath = path.join(currentPath, projectName);\r\nconst git_repo = \"https://github.com/AG-Zenmonk/create-zen-app.git\";\r\n\r\ntry {\r\n    fs.mkdirSync(projectPath);\r\n} catch (err) {\r\n    if (err.code === 'EEXIST') {\r\n        console.log(`The file ${projectName} already exist in the current directory, please give it another name.`);\r\n    } else {\r\n        console.log(error);\r\n    }\r\n    process.exit(1);\r\n}\r\nasync function main() {\r\n    try {\r\n        console.log('Downloading files...');\r\n        execSync(`git clone --depth 1 ${git_repo} ${projectPath}`);\r\n\r\n        process.chdir(projectPath);\r\n\r\n        console.log('Installing dependencies...');\r\n        execSync('cd client && npm install');\r\n        execSync('cd ../server && npm install');\r\n        execSync('cd ..');\r\n\r\n        console.log('Removing useless files');\r\n        execSync('npx rimraf ./.git');\r\n        fs.rmdirSync(path.join(projectPath, 'bin'), { recursive: true });\r\n\r\n        console.log('The installation is done, this is ready to use !');\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n main();\r\n","const createApp = require('./bin/create-app')\r\n\r\ncreateApp()"]}